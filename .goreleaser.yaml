# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # if you don't do these things before calling goreleaser, it might be a
    # good idea to do them here:
    - rustup default stable
    - cargo install --locked cargo-zigbuild
    - cargo fetch --locked

builds:
  - builder: rust
    env:
      - CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER=x86_64-w64-mingw32-gcc
      - CC_x86_64_pc_windows_gnu=x86_64-w64-mingw32-gcc
      - CXX_x86_64_pc_windows_gnu=x86_64-w64-mingw32-g++
      - CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER=rust-lld
      - CARGO_TARGET_AARCH64_APPLE_DARWIN_LINKER=rust-lld
      - VERSION={{ .Version }}
      - COMMIT={{ .FullCommit }}
      - DATE={{ .Date }}
    flags:
      - --release
    targets:
      - x86_64-unknown-linux-gnu
      - x86_64-apple-darwin
      - x86_64-pc-windows-gnu
      - aarch64-unknown-linux-gnu
      - aarch64-apple-darwin

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
